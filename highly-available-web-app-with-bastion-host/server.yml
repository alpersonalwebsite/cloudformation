Description: Highly available Web App, web-app configuration.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  S3Bucket:
    Description: The name of the S3 bucket hosting our static files
    Type: String

  S3BucketCode:
    Description: The bundle with our static files
    Type: String

  TheKeyPair:
    Description: The name of the KeyPair
    Type: String


Resources: 
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH through bastion host
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref LBSecGroup
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          #CidrIp: 0.0.0.0/0
        - SourceSecurityGroupId: !Ref BastionHostSecGroup
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          #CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  BastionHostSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  UdacityS3ReadOnlyEC2:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  RolePolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'S3GetAndListEC23Policy'
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
          - Action: s3:ListBucket
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}'
      Roles:
        - Ref: 'UdacityS3ReadOnlyEC2'

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: 'UdacityS3ReadOnlyEC2'

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install unzip awscli -y
          sudo yum install httpd -y
          sudo systemctl start httpd.service
          cd /var/www/html
          aws s3 cp s3://${S3Bucket}/${S3BucketCode} .
          unzip -o ${S3BucketCode}
      ImageId: ami-0a887e401f7654935
      IamInstanceProfile: !Ref ProfileWithRolesForOurApp
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t3.small
      KeyName: !Ref TheKeyPair
      BlockDeviceMappings:
        - DeviceName: '/dev/sdk'
          Ebs:
            VolumeSize: '10'
  
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub '${EnvironmentName}-PRIV-NETS'
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '1'
      MaxSize: '1'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup
      Tags:
        - Key: Name
          Value: WebAppServer
          PropagateAtLaunch: "true"
  
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB1-SN'
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB2-SN'
      SecurityGroups:
        - Ref: LBSecGroup
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 80
      Protocol: 'HTTP'
  
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1
  
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: '${EnvironmentName}-VPCID'
    
  BastionHost1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07ebfd5b3428b6f4d
      InstanceType: t2.micro
      KeyName: !Ref TheKeyPair
      SubnetId:
        Fn::ImportValue: !Sub '${EnvironmentName}-PUB1-SN'
      #AvailabilityZone: !Select [0, !GetAZs '']
      SecurityGroupIds:
        - Ref: BastionHostSecGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Bastion Host 1

  BastionHost2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07ebfd5b3428b6f4d
      InstanceType: t2.micro
      KeyName: !Ref TheKeyPair
      SubnetId:
        Fn::ImportValue: !Sub '${EnvironmentName}-PUB2-SN'
      #AvailabilityZone: !Select [0, !GetAZs '']
      SecurityGroupIds: 
        - Ref: BastionHostSecGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Bastion Host 2

Outputs:
  WebAppLB:
    Description: A reference to the created WebAppLB DNS
    Value: !GetAtt WebAppLB.DNSName
    Export:
      Name: !Sub ${EnvironmentName}-PWebAppLB-DNS

  BastionHost1:
    Description: DNS of Bastion Host 1
    Value: !GetAtt BastionHost1.PublicDnsName
    Export:
      Name: !Sub ${EnvironmentName}-BastionHost1-DNS   

  BastionHost2:
    Description: DNS of Bastion Host 2
    Value: !GetAtt BastionHost2.PublicDnsName
    Export:
      Name: !Sub ${EnvironmentName}-BastionHost2-DNS   